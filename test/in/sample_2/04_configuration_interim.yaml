---
- :key: '1'
  :contents: "`# Configuring HARP for cluster management`"
  :translated_contents: ''
  :original_contents: "`# Configuring HARP for cluster management` "
- :key: '2'
  :contents: The HARP configuration file follows a standard YAML-style formatting
    that was simplified for readability. This file is located in the `/etc/harp` directory
    by default and is named `config.yml`
  :translated_contents: ''
  :original_contents: 'The HARP configuration file follows a standard YAML-style formatting
    that was simplified for readability. This file is located in the `/etc/harp` directory
    by default and is named `config.yml` '
- :key: '3'
  :contents: You can explicitly provide the configuration file location to all HARP  executables
    by using the `-f`/`--config` argument.
  :translated_contents: ''
  :original_contents: 'You can explicitly provide the configuration file location
    to all HARP  executables by using the `-f`/`--config` argument. '
- :key: '4'
  :contents: "## Standard configuration"
  :translated_contents: ''
  :original_contents: "## Standard configuration "
- :key: '5'
  :contents: 'HARP essentially operates as three components:'
  :translated_contents: ''
  :original_contents: 'HARP essentially operates as three components: '
- :key: '6'
  :contents: "*  HARP Manager "
  :translated_contents: ''
  :original_contents: "* HARP Manager "
- :key: '7'
  :contents: "*  HARP Proxy "
  :translated_contents: ''
  :original_contents: "* HARP Proxy "
- :key: '8'
  :contents: "*  harpctl "
  :translated_contents: ''
  :original_contents: "* harpctl "
- :key: '9'
  :contents: 'Each of these use the same standard `config.yml` configuration format,
    which always include the following sections:'
  :translated_contents: ''
  :original_contents: 'Each of these use the same standard `config.yml` configuration
    format, which always include the following sections: '
- :key: '10'
  :contents: "*  `cluster.name` &mdash; The name of the cluster to target for all
    operations. "
  :translated_contents: ''
  :original_contents: "* `cluster.name` &mdash; The name of the cluster to target
    for all operations. "
- :key: '11'
  :contents: "*  `dcs` &mdash; DCS driver and connection configuration for all endpoints. "
  :translated_contents: ''
  :original_contents: "* `dcs` &mdash; DCS driver and connection configuration for
    all endpoints. "
- :key: '12'
  :contents: 'This means a standard preamble is always included for HARP operations,
    such as the following:'
  :translated_contents: ''
  :original_contents: 'This means a standard preamble is always included for HARP
    operations, such as the following: '
- :key: '13'
  :contents: edb_notranlate_0
  :translated_contents: ''
  :original_contents: " edb_notranlate_0  "
- :key: '14'
  :contents: Other sections are optional or specific to the named HARP component.
  :translated_contents: ''
  :original_contents: 'Other sections are optional or specific to the named HARP component. '
- :key: '15'
  :contents: "### Cluster name"
  :translated_contents: ''
  :original_contents: "### Cluster name "
- :key: '16'
  :contents: The `name` entry under the `cluster` heading is required for all  interaction
    with HARP. Each HARP cluster has a name for both disambiguation and for labeling
    data in the DCS for the specific cluster.
  :translated_contents: ''
  :original_contents: 'The `name` entry under the `cluster` heading is required for
    all  interaction with HARP. Each HARP cluster has a name for both disambiguation
    and for labeling data in the DCS for the specific cluster. '
- :key: '17'
  :contents: HARP Manager writes information about the cluster here for consumption
    by  HARP Proxy and harpctl. HARP Proxy services direct traffic to nodes in  this
    cluster. The `harpctl` management tool interacts with this cluster.
  :translated_contents: ''
  :original_contents: 'HARP Manager writes information about the cluster here for
    consumption by  HARP Proxy and harpctl. HARP Proxy services direct traffic to
    nodes in  this cluster. The `harpctl` management tool interacts with this cluster. '
- :key: '18'
  :contents: "### DCS settings"
  :translated_contents: ''
  :original_contents: "### DCS settings "
- :key: '19'
  :contents: Configuring the consensus layer is key to HARP functionality. Without
    the DCS,  HARP has nowhere to store cluster metadata, can't hold leadership elections,  and
    so on. Therefore this portion of the configuration is required, and  certain elements
    are optional.
  :translated_contents: ''
  :original_contents: 'Configuring the consensus layer is key to HARP functionality.
    Without the DCS,  HARP has nowhere to store cluster metadata, can''t hold leadership
    elections,  and so on. Therefore this portion of the configuration is required,
    and  certain elements are optional. '
- :key: '20'
  :contents: 'Specify all elements under a section named `dcs` with these multiple  supplementary
    entries:'
  :translated_contents: ''
  :original_contents: 'Specify all elements under a section named `dcs` with these
    multiple  supplementary entries: '
- :key: '21'
  :contents: "-  **`driver`**: Required type of consensus layer to use.  Currently
    can be `etcd` or `bdr`. Support for `bdr` as a consensus layer is  experimental.
    Using `bdr` as the consensus layer reduces the  additional software for consensus
    storage but expects a minimum of three  full BDR member nodes to maintain quorum
    during database maintenance. "
  :translated_contents: ''
  :original_contents: "- **`driver`**: Required type of consensus layer to use.  Currently
    can be `etcd` or `bdr`. Support for `bdr` as a consensus layer is  experimental.
    Using `bdr` as the consensus layer reduces the  additional software for consensus
    storage but expects a minimum of three  full BDR member nodes to maintain quorum
    during database maintenance. "
- :key: '22'
  :contents: "-  **`endpoints`**: Required list of connection strings to contact the
    DCS. List every node of the DCS here if possible. This ensures HARP  continues
    to function as long as a majority of the DCS can still  operate and be reached
    by the network. "
  :translated_contents: ''
  :original_contents: "- **`endpoints`**: Required list of connection strings to contact
    the DCS. List every node of the DCS here if possible. This ensures HARP  continues
    to function as long as a majority of the DCS can still  operate and be reached
    by the network. "
- :key: '23'
  :contents: 'Format when using `etcd` as the consensus layer is as follows: edb_notranlate_1  Format
    when using the experimental `bdr` consensus layer is as follows: edb_notranlate_2  Currently,
    `bdr` consensus layer requires the first endpoint to point to the local postgres
    instance.'
  :translated_contents: ''
  :original_contents: "  Format when using `etcd` as the consensus layer is as follows:
    edb_notranlate_1  Format when using the experimental `bdr` consensus layer is
    as follows: edb_notranlate_2  Currently, `bdr` consensus layer requires the first
    endpoint to point to the local postgres instance.   "
- :key: '24'
  :contents: "-  **`request_timeout`**: Time in milliseconds to consider a request
    as failed. If HARP makes a request to the DCS and receives no response in this
    time, it considers the operation as failed. This can cause the issue to be logged
    as an error or retried, depending on the nature of the request. Default: 250. "
  :translated_contents: ''
  :original_contents: "- **`request_timeout`**: Time in milliseconds to consider a
    request as failed. If HARP makes a request to the DCS and receives no response
    in this time, it considers the operation as failed. This can cause the issue to
    be logged as an error or retried, depending on the nature of the request. Default:
    250. "
- :key: '25'
  :contents: 'The following DCS SSL settings apply only when  edb_notranlate_3 yaml
    dcs: driver: etcd endpoints: - host1:2379 - host2:2379 - host3:2379 edb_notranlate_4
    yaml cluster: name: mycluster'
  :translated_contents: ''
  :original_contents: 'The following DCS SSL settings apply only when  edb_notranlate_3
    yaml dcs: driver: etcd endpoints: - host1:2379 - host2:2379 - host3:2379 edb_notranlate_4
    yaml cluster: name: mycluster '
- :key: '26'
  :contents: 'dcs: driver: etcd endpoints: - host1:2379 - host2:2379 - host3:2379'
  :translated_contents: ''
  :original_contents: 'dcs: driver: etcd endpoints: - host1:2379 - host2:2379 - host3:2379 '
- :key: '27'
  :contents: 'manager: name: node1 log_level: INFO edb_notranlate_5 yaml cluster:
    name: mycluster'
  :translated_contents: ''
  :original_contents: 'manager: name: node1 log_level: INFO edb_notranlate_5 yaml
    cluster: name: mycluster '
- :key: '28'
  :contents: 'dcs: driver: etcd endpoints: - host1:2379 - host2:2379 - host3:2379'
  :translated_contents: ''
  :original_contents: 'dcs: driver: etcd endpoints: - host1:2379 - host2:2379 - host3:2379 '
- :key: '29'
  :contents: 'proxy: name: proxy1 location: dc1 pgbouncer_bin_dir: /usr/sbin edb_notranlate_6
    bash harpctl set node node1 lease_refresh_interval=100 edb_notranlate_7 bash harpctl
    set proxy global max_client_conn=1000 ```'
  :translated_contents: ''
  :original_contents: 'proxy: name: proxy1 location: dc1 pgbouncer_bin_dir: /usr/sbin
    edb_notranlate_6 bash harpctl set node node1 lease_refresh_interval=100 edb_notranlate_7
    bash harpctl set proxy global max_client_conn=1000 ``` '
